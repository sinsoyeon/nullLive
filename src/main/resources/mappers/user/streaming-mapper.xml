<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Streaming">

	<resultMap type="Member" id="memberResultSet">
		<id property="mno" column="MNO"/>
		<result property="mid" column="MID"/>
		<result property="mpwd" column="MPWD"/>
		<result property="email" column="EMAIL"/>
		<result property="emailC" column="EMAIL_CHECK"/>
		<result property="phone" column="PHONE"/>
		<result property="agency" column="AGENCY"/>
		<result property="name" column="NAME"/>
		<result property="nickName" column="NICK_NAME"/>
		<result property="gender" column="GENDER"/>
		<result property="enrollDate" column="ENROLL_DATE"/>
		<result property="isAdmin" column="IS_ADMIN"/>
		<result property="point" column="POINT"/>
		<result property="receivedLikes" column="RECEIVED_LIKES"/>
		<result property="cumulativeReport" column="CUMULATIVE_REPORT"/>
		<result property="mstatus" column="M_STATUS"/>
		<result property="pwdModifyDate" column="PWD_MODIFY_DATE"/>
		<result property="withdrawalDate" column="WITHDRAWAL_DAET"/>
		<result property="isStreamer" column="IS_STREAMER"/>
		<result property="birthday" column="BIRTHDAY"/>
		<result property="adult" column="ADULT"/>
	</resultMap>
	
	<resultMap type="BroadHis" id="broadHisResultSet">
		<id property="bhno" column="BHNO"/>
		<result property="startDate" column="BH_START_DATE"/>
		<result property="endDate" column="BH_END_DATE"/>
		<result property="bhStatus" column="BH_STATUS"/>
		<result property="countViewers" column="COUNT_VIEWERS"/>
		<result property="bcno" column="BCNO"/>
		<result property="streamerId" column="MID"/>
		<result property="countRecommendation" column="COUNT_RECOMMENDATION"/>
		<result property="btitle" column="BROAD_TITLE"/>
		<result property="bpwd" column="BROAD_PWD"/>
		<result property="bcategory" column="BROAD_CATEGORY"/>
		<result property="adult" column="ADULT"/>
	</resultMap>
	
  
    <!-- 정언(LIVE/VOD 방송 목록) -->
  	<resultMap type="BroadList" id="broadListResultSet">
		<id property="bhno" column="BHNO"/>
		<result property="broadAddress" column="BROAD_ADDRESS"/>
		<result property="mno" column="MNO"/>
		<result property="nickName" column="NICK_NAME"/>
		<result property="startDate" column="BH_START_DATE"/>
		<result property="endDate" column="BH_END_DATE"/>
		<result property="bhStatus" column="BH_STATUS"/>
		<result property="countViewers" column="COUNT_VIEWERS"/>
		<result property="bcno" column="BCNO"/>
		<result property="countRecommendation" column="COUNT_RECOMMENDATION"/>
		<result property="bTitle" column="BROAD_TITLE"/>
		<result property="bPwd" column="BROAD_PWD"/>
		<result property="bCategory" column="BROAD_CATEGORY"/>
		<result property="adult" column="ADULT"/>
	</resultMap>
	
	<!-- 정언(즐겨찾기) -->
	<resultMap type="BroadList" id="favBjResultSet">
		<id property="fano" column="FANO"/>
		<result property="mno" column="MNO"/>
		<result property="nickName" column="NICK_NAME"/>
		<result property="favCount" column="FAVCOUNT"/>
		<result property="sGender" column="GENDER"/>
	</resultMap>
	
	<!-- 정언(구독한 BJ) -->
  	<resultMap type="BroadList" id="subBjResultSet">
		<id property="suno" column="SUNO"/>
		<result property="mno" column="MNO"/>
		<result property="nickName" column="NICK_NAME"/>
		<result property="subCount" column="SUBCOUNT"/>
	</resultMap>
  
	<!-- selectMember(reset용) -->
	<select id="selectMember" resultMap="memberResultSet" parameterType="_int">
		SELECT *
		FROM MEMBER
		WHERE MNO = #{mno}
		AND M_STATUS = 'Y'
	</select>
	
	<!-- startStreaming(회륜) -->
	<insert id="startStreaming" parameterType="BroadHis">
		INSERT INTO BROAD_HIS(BHNO,BH_START_DATE,BH_STATUS,COUNT_VIEWERS,COUNT_RECOMMENDATION,BCNO,BROAD_TITLE,BROAD_PWD,BROAD_CATEGORY,ADULT)
		VALUES(SEQ_BHNO.NEXTVAL,SYSDATE,DEFAULT,0,0,
        (SELECT BCNO FROM BROAD_CENTER JOIN MEMBER USING(MNO) WHERE MID=#{streamerId}),
        #{btitle},
        <choose>
         <when test="pwdCheck.equals('true')">#{bpwd}</when>
         <otherwise>NULL</otherwise>
        </choose>
        ,#{bcategory},
        <choose>
         <when test="adult.equals('false')">'N'</when>
         <otherwise>
         'Y'
         </otherwise>
         </choose>
         )
	</insert>
	
	<!-- endStreaming(회륜) -->
	<update id="endStreaming" parameterType="java.lang.String">
		UPDATE BROAD_HIS
		SET BH_END_DATE=SYSDATE,
		BH_STATUS='N'
		<!-- COUNT_VIEWERS, COUNT_RECOMMENDATION 미완 -->
		WHERE BCNO = (SELECT BCNO FROM BROAD_CENTER JOIN MEMBER USING(MNO) WHERE MID=#{mid})
		AND BH_STATUS='Y'
	</update>
	
	<!-- 방송 주소 가져오기(회륜) -->
	<select id="getStreamerAdress" resultType="java.lang.String">
		SELECT BROAD_ADDRESS
		FROM BROAD_CENTER
		JOIN MEMBER USING(MNO)
		WHERE MNO=#{mno}
		AND M_STATUS='Y'
	</select>
	
	<!-- 방송 중인지(회륜) -->
	<select id="isOnAir" parameterType="java.lang.String" resultType="_int">
		SELECT COUNT(*)
		FROM BROAD_HIS
		JOIN BROAD_CENTER USING(BCNO)
		WHERE BROAD_ADDRESS=#{streamerAddress}
		AND BH_STATUS='Y'
	</select>
	
	<!-- 방송 입장 처리(회륜) -->
	<insert id="enterStream" parameterType="java.util.HashMap">
		INSERT INTO VIEW_HIS(VINO,VIEW_START_DATE,MNO,BHNO)
		VALUES(SEQ_VINO.NEXTVAL,SYSDATE,#{m.mno},
		(SELECT BHNO FROM BROAD_HIS JOIN BROAD_CENTER USING(BCNO) WHERE BROAD_ADDRESS=#{address} AND BH_STATUS='Y')
		)
	</insert>
		
	<!-- 시청자 입장 시도 시 방송 정보 가져오기(회륜) -->
	<select id="getBroadHis" parameterType="java.lang.String" resultMap="broadHisResultSet">
		SELECT * FROM BROAD_HIS
		JOIN BROAD_CENTER USING(BCNO)
		JOIN MEMBER USING(MNO)
		WHERE MID=#{streamerAddress}
		AND BH_STATUS='Y'
	</select>
	
	<!-- 시청 종료(회륜) -->
	<update id="exitStreaming" parameterType="java.util.HashMap">
		UPDATE VIEW_HIS
		SET VIEW_END_DATE=SYSDATE
		WHERE MNO=(SELECT MNO FROM MEMBER WHERE MID=#{mid})
		AND BHNO=#{bhno}
	</update>
	
	<!-- 누적 시청자 수 추가(회륜) -->
	<update id="updateViewerCount" parameterType="java.lang.String">
		UPDATE BROAD_HIS
		SET COUNT_VIEWERS = (SELECT COUNT_VIEWERS FROM BROAD_HIS JOIN BROAD_CENTER USING(BCNO) WHERE BROAD_ADDRESS=#{streamerAddress} AND BH_STATUS='Y') + 1
		WHERE BCNO = (SELECT BCNO FROM BROAD_CENTER WHERE BROAD_ADDRESS=#{streamerAddress})
		AND BH_STATUS='Y'
	</update>
	
	<!-- 블랙리스트  체크 (소연) -->
	<select id="checkBlackList" parameterType="java.util.HashMap" resultType="_int">
	SELECT COUNT(*) BLACK_COUNT
	FROM MEMBER M,BLACKLIST B
	WHERE M.MNO = B.MNO
	AND M.MNO = #{loginUser.mno}
	AND SNO = (SELECT SNO 
               FROM MEMBER,BROAD_CENTER 
               WHERE MEMBER.MNO = BROAD_CENTER.MNO  
               AND BROAD_ADDRESS = #{streamerAddress})	
    AND BL_STATUS ='Y'
	</select>
	
  	<!-- 메인페이지 Hot Live 방송 수 조회용 쿼리문 (정언) -->
	<select id="hotLiveListCount" resultType="_int">
		<![CDATA[
		SELECT COUNT(*)
		FROM (SELECT * FROM BROAD_HIS ORDER BY COUNT_VIEWERS DESC)
		WHERE ROWNUM <= 10
		AND BH_START_DATE = TO_CHAR(SYSDATE, 'YY/MM/DD')
		]]>
	</select>
	
	
	<!-- 메인페이지 Hot Live 방송 목록 조회용 쿼리문 (정언) -->
	<select id="selectHotLiveList" resultMap="broadListResultSet">
		<![CDATA[
		SELECT ROWNUM, BHNO, BROAD_ADDRESS, MNO, NICK_NAME, BH_START_DATE, BH_END_DATE, BH_STATUS, COUNT_VIEWERS, BCNO, COUNT_RECOMMENDATION, BROAD_TITLE, BROAD_PWD, BROAD_CATEGORY, ADULT
		FROM (SELECT BH.BHNO, BC.BROAD_ADDRESS, M.MNO, M.NICK_NAME, BH.BH_START_DATE, BH.BH_END_DATE, BH.BH_STATUS, BH.COUNT_VIEWERS, BH.BCNO, BH.COUNT_RECOMMENDATION, BH.BROAD_TITLE, BH.BROAD_PWD, BH.BROAD_CATEGORY , BH.ADULT
		      FROM BROAD_HIS BH 
		      JOIN BROAD_CENTER BC ON(BH.BCNO = BC.BCNO)
		      JOIN MEMBER M ON(BC.MNO = M.MNO)
		      ORDER BY COUNT_VIEWERS DESC)
		WHERE ROWNUM <= 10
		AND BH_START_DATE = TO_CHAR(SYSDATE, 'YY/MM/DD')
		]]>
	</select>
	
	<!-- 메인페이지 Hot Vod 방송 수 조회용 쿼리문 (정언) -->
	<select id="hotVodListCount" resultType="_int">
		<![CDATA[
		SELECT COUNT(*)
		FROM (SELECT * FROM BROAD_HIS ORDER BY COUNT_VIEWERS DESC)
		WHERE ROWNUM <= 10
		AND BH_START_DATE <> TO_CHAR(SYSDATE, 'YY/MM/DD')
		]]>
	</select>
	
	
	<!-- 메인페이지 Hot Vod 방송 목록 조회용 쿼리문 (정언) -->
	<select id="selectHotVodList" resultMap="broadListResultSet">
		<![CDATA[
		SELECT ROWNUM, BHNO, BROAD_ADDRESS, MNO, NICK_NAME, BH_START_DATE, BH_END_DATE, BH_STATUS, COUNT_VIEWERS, BCNO, COUNT_RECOMMENDATION, BROAD_TITLE, BROAD_PWD, BROAD_CATEGORY, ADULT
		FROM (SELECT BH.BHNO, BC.BROAD_ADDRESS, M.MNO, M.NICK_NAME, BH.BH_START_DATE, BH.BH_END_DATE, BH.BH_STATUS, BH.COUNT_VIEWERS, BH.BCNO, BH.COUNT_RECOMMENDATION, BH.BROAD_TITLE, BH.BROAD_PWD, BH.BROAD_CATEGORY , BH.ADULT
		      FROM BROAD_HIS BH 
		      JOIN BROAD_CENTER BC ON(BH.BCNO = BC.BCNO)
		      JOIN MEMBER M ON(BC.MNO = M.MNO)
		      ORDER BY COUNT_VIEWERS DESC)
		WHERE ROWNUM <= 10
		AND BH_START_DATE <> TO_CHAR(SYSDATE, 'YY/MM/DD')
		]]>
	</select>
	
	<!-- 메인페이지 All Live 방송 수 조회용 쿼리문 (정언) -->
	<select id="allLiveListCount" resultType="_int">
		SELECT COUNT(*)
		FROM BROAD_HIS
		WHERE BH_START_DATE = TO_CHAR(SYSDATE, 'YY/MM/DD')
	</select>
	
	
	<!-- 메인페이지 All Live 방송 목록 조회용 쿼리문 (정언) -->
	<select id="selectAllLiveList" resultMap="broadListResultSet">
		SELECT BH.BHNO, BC.BROAD_ADDRESS, M.MNO, M.NICK_NAME, BH.BH_START_DATE, BH.BH_END_DATE, BH.BH_STATUS, BH.COUNT_VIEWERS, BH.BCNO, BH.COUNT_RECOMMENDATION, BH.BROAD_TITLE, BH.BROAD_PWD, BH.BROAD_CATEGORY , BH.ADULT
		FROM BROAD_HIS BH 
		JOIN BROAD_CENTER BC ON(BH.BCNO = BC.BCNO)
		JOIN MEMBER M ON(BC.MNO = M.MNO)
		WHERE BH_START_DATE = TO_CHAR(SYSDATE, 'YY/MM/DD')
		ORDER BY BH_START_DATE DESC
	</select>
	
	<!-- 메인페이지 All Vod 방송 수 조회용 쿼리문 (정언) -->
	<select id="allVodListCount" resultType="_int">
		<![CDATA[
		SELECT COUNT(*)
		FROM BROAD_HIS
		WHERE BH_START_DATE <> TO_CHAR(SYSDATE, 'YY/MM/DD')
		]]>
	</select>
	
	<!-- 전체조회 -->
	<!-- 메인페이지 All Vod 방송 목록 조회용 쿼리문 (정언) -->
	<select id="selectAllVodList" resultMap="broadListResultSet">
		<![CDATA[
		SELECT BH.BHNO, BC.BROAD_ADDRESS, M.MNO, M.NICK_NAME, BH.BH_START_DATE, BH.BH_END_DATE, BH.BH_STATUS, BH.COUNT_VIEWERS, BH.BCNO, BH.COUNT_RECOMMENDATION, BH.BROAD_TITLE, BH.BROAD_PWD, BH.BROAD_CATEGORY , BH.ADULT
		FROM BROAD_HIS BH 
		JOIN BROAD_CENTER BC ON(BH.BCNO = BC.BCNO)
		JOIN MEMBER M ON(BC.MNO = M.MNO)
		WHERE BH_START_DATE <> TO_CHAR(SYSDATE, 'YY/MM/DD')
		ORDER BY BH_START_DATE DESC
		]]>
	</select>
	
	<!-- 카테고리 -->
	<!-- 메인페이지 검색한 All Live 방송 수 조회용 쿼리문 (정언) -->
	<select id="searchAllLiveCount" resultType="_int">
		SELECT COUNT(*)
		FROM BROAD_HIS
		WHERE BH_START_DATE = TO_CHAR(SYSDATE, 'YY/MM/DD')
		AND BROAD_CATEGORY = #{condition}
	</select>
	
	
	<!-- 메인페이지 검색한 All Live 방송 목록 조회용 쿼리문 (정언) -->
	<select id="searchAllLiveList" resultMap="broadListResultSet">
		SELECT BH.BHNO, BC.BROAD_ADDRESS, M.MNO, M.NICK_NAME, BH.BH_START_DATE, BH.BH_END_DATE, BH.BH_STATUS, BH.COUNT_VIEWERS, BH.BCNO, BH.COUNT_RECOMMENDATION, BH.BROAD_TITLE, BH.BROAD_PWD, BH.BROAD_CATEGORY , BH.ADULT
		FROM BROAD_HIS BH 
		JOIN BROAD_CENTER BC ON(BH.BCNO = BC.BCNO)
		JOIN MEMBER M ON(BC.MNO = M.MNO)
		WHERE BH_START_DATE = TO_CHAR(SYSDATE, 'YY/MM/DD')
		AND BROAD_CATEGORY = #{condition}
		ORDER BY BH_START_DATE DESC
	</select>
	
	<!-- 메인페이지 검색한 All Vod 방송 수 조회용 쿼리문 (정언) -->
	<select id="searchAllVodCount" resultType="_int">
		<![CDATA[
		SELECT COUNT(*)
		FROM BROAD_HIS
		WHERE BH_START_DATE <> TO_CHAR(SYSDATE, 'YY/MM/DD')
		AND BROAD_CATEGORY = #{condition}
		]]>
	</select>
	
	
	<!-- 메인페이지 검색한 All Vod 방송 목록 조회용 쿼리문 (정언) -->
	<select id="searchAllVodList" resultMap="broadListResultSet">
		<![CDATA[
		SELECT BH.BHNO, BC.BROAD_ADDRESS, M.MNO, M.NICK_NAME, BH.BH_START_DATE, BH.BH_END_DATE, BH.BH_STATUS, BH.COUNT_VIEWERS, BH.BCNO, BH.COUNT_RECOMMENDATION, BH.BROAD_TITLE, BH.BROAD_PWD, BH.BROAD_CATEGORY , BH.ADULT
		FROM BROAD_HIS BH 
		JOIN BROAD_CENTER BC ON(BH.BCNO = BC.BCNO)
		JOIN MEMBER M ON(BC.MNO = M.MNO)
		WHERE BH_START_DATE <> TO_CHAR(SYSDATE, 'YY/MM/DD')
		AND BROAD_CATEGORY = #{condition}
		ORDER BY BH_START_DATE DESC
		]]>
	</select>
	
	<!-- 방송 시작 스트리밍 정보 가져오기-->
	<select id="getStreamingInfo" parameterType="BroadHis" resultType="java.util.HashMap">
		SELECT CUMULATIVE_SELECTION selects, MID streamerId, NICK_NAME nickName, RECEIVED_LIKES likes,
	    	BROAD_ADDRESS streamerAddress,ENDING_COMMENT endingComment,
		    (SELECT CHANGE_NAME FROM ATTACHMENT JOIN ATT_MANAGE USING(ATTNO) 
		     WHERE USAGE='프로필이미지' AND ATT_STATUS='Y'
	     	AND MNO=(SELECT MNO FROM MEMBER WHERE MID=#{streamerId})) fileName
	    FROM STREAMER
		JOIN MEMBER USING(MNO)
		JOIN BROAD_CENTER USING(MNO)
		WHERE MID = #{streamerId}
	</select>
	
	<!-- 방송 입장 스트리밍 정보 가져오기 -->
	<select id="getBroadInfo" parameterType="java.lang.String" resultType="java.util.HashMap">
		SELECT CUMULATIVE_SELECTION selects, MID streamerId, NICK_NAME nickName, RECEIVED_LIKES likes,
	    	BROAD_ADDRESS streamerAddress,ENDING_COMMENT endingComment,BROAD_TITLE title,BHNO bhno,
            (SELECT CHANGE_NAME FROM ATTACHMENT JOIN ATT_MANAGE USING(ATTNO) 
		     WHERE USAGE='프로필이미지' AND ATT_STATUS='Y'
		     AND MNO=(SELECT MNO FROM MEMBER WHERE MID=#{streamerAddress})) fileName
	    FROM STREAMER
		JOIN MEMBER USING(MNO)
		JOIN BROAD_CENTER USING(MNO)
	    JOIN BROAD_HIS USING(BCNO)
	    WHERE MID = #{streamerAddress}
	    AND BH_STATUS='Y'
	</select>
  

  	<!-- 방송 추천 -->
  	<update id="recomStreamer" parameterType="java.lang.String">
  		UPDATE STREAMER
  		SET CUMULATIVE_SELECTION=
            (SELECT CUMULATIVE_SELECTION FROM STREAMER 
             JOIN BROAD_CENTER USING(MNO) WHERE BROAD_ADDRESS=#{streamerAddress})+1
  		WHERE MNO=(SELECT MNO FROM MEMBER JOIN BROAD_CENTER USING(MNO) WHERE BROAD_ADDRESS=#{streamerAddress})
  	</update>
  	
  	<!-- 방송 중 추천 -->
  	<update id="recomBroad" parameterType="java.lang.String">
  		UPDATE BROAD_HIS
		SET COUNT_RECOMMENDATION = 
		    (SELECT COUNT_RECOMMENDATION FROM BROAD_HIS WHERE BHNO=
		        (SELECT BHNO FROM BROAD_HIS JOIN BROAD_CENTER USING(BCNO) WHERE BROAD_ADDRESS=#{streamerAddress} AND BH_STATUS='Y'))+1
		WHERE BHNO=(SELECT BHNO FROM BROAD_HIS JOIN BROAD_CENTER USING(BCNO) WHERE BROAD_ADDRESS=#{streamerAddress} AND BH_STATUS='Y')
  	</update>
  	
  	<!-- 현재 추천 수 가져오기 -->
  	<select id="currRecom" parameterType="java.lang.String" resultType="_int">
  		SELECT COUNT_RECOMMENDATION
  		FROM BROAD_HIS
  		JOIN BROAD_CENTER USING(BCNO)
  		WHERE BH_STATUS='Y'
        AND BROAD_ADDRESS=#{roomId}
  	</select>

  <!-- 정렬 -->
  	<!-- 메인페이지 시청자 순으로 정렬한 All Live 방송 목록 조회용 쿼리문 (정언) -->
	<select id="sortVAllLiveList" resultMap="broadListResultSet">
		SELECT BH.BHNO, BC.BROAD_ADDRESS, M.MNO, M.NICK_NAME, BH.BH_START_DATE, BH.BH_END_DATE, BH.BH_STATUS, BH.COUNT_VIEWERS, BH.BCNO, BH.COUNT_RECOMMENDATION, BH.BROAD_TITLE, BH.BROAD_PWD, BH.BROAD_CATEGORY , BH.ADULT
		FROM BROAD_HIS BH 
		JOIN BROAD_CENTER BC ON(BH.BCNO = BC.BCNO)
		JOIN MEMBER M ON(BC.MNO = M.MNO)
		WHERE BH_START_DATE = TO_CHAR(SYSDATE, 'YY/MM/DD')
		ORDER BY COUNT_VIEWERS DESC
	</select>
	
	<!-- 메인페이지 시청자 순으로 정렬한 All Vod 방송 목록 조회용 쿼리문 (정언) -->
	<select id="sortVAllVodList" resultMap="broadListResultSet">
		<![CDATA[
		SELECT BH.BHNO, BC.BROAD_ADDRESS, M.MNO, M.NICK_NAME, BH.BH_START_DATE, BH.BH_END_DATE, BH.BH_STATUS, BH.COUNT_VIEWERS, BH.BCNO, BH.COUNT_RECOMMENDATION, BH.BROAD_TITLE, BH.BROAD_PWD, BH.BROAD_CATEGORY , BH.ADULT
		FROM BROAD_HIS BH 
		JOIN BROAD_CENTER BC ON(BH.BCNO = BC.BCNO)
		JOIN MEMBER M ON(BC.MNO = M.MNO)
		WHERE BH_START_DATE <> TO_CHAR(SYSDATE, 'YY/MM/DD')
		ORDER BY COUNT_VIEWERS DESC
		]]>
	</select>
	
	<!-- 메인페이지 시청자 순으로 정렬한 All Live 방송 목록 조회용 쿼리문 -조건있음 (정언) -->
	<select id="sortVAllLiveList2" resultMap="broadListResultSet">
		SELECT BH.BHNO, BC.BROAD_ADDRESS, M.MNO, M.NICK_NAME, BH.BH_START_DATE, BH.BH_END_DATE, BH.BH_STATUS, BH.COUNT_VIEWERS, BH.BCNO, BH.COUNT_RECOMMENDATION, BH.BROAD_TITLE, BH.BROAD_PWD, BH.BROAD_CATEGORY , BH.ADULT
		FROM BROAD_HIS BH 
		JOIN BROAD_CENTER BC ON(BH.BCNO = BC.BCNO)
		JOIN MEMBER M ON(BC.MNO = M.MNO)
		WHERE BH_START_DATE = TO_CHAR(SYSDATE, 'YY/MM/DD')
		AND BROAD_CATEGORY = #{condition}
		ORDER BY COUNT_VIEWERS DESC
	</select>
	
	<!-- 메인페이지 시청자 순으로 정렬한 All Vod 방송 목록 조회용 쿼리문 -조건있음 (정언) -->
	<select id="sortVAllVodList2" resultMap="broadListResultSet">
		<![CDATA[
		SELECT BH.BHNO, BC.BROAD_ADDRESS, M.MNO, M.NICK_NAME, BH.BH_START_DATE, BH.BH_END_DATE, BH.BH_STATUS, BH.COUNT_VIEWERS, BH.BCNO, BH.COUNT_RECOMMENDATION, BH.BROAD_TITLE, BH.BROAD_PWD, BH.BROAD_CATEGORY , BH.ADULT
		FROM BROAD_HIS BH 
		JOIN BROAD_CENTER BC ON(BH.BCNO = BC.BCNO)
		JOIN MEMBER M ON(BC.MNO = M.MNO)
		WHERE BH_START_DATE <> TO_CHAR(SYSDATE, 'YY/MM/DD')
		AND BROAD_CATEGORY = #{condition}
		ORDER BY COUNT_VIEWERS DESC
		]]>
	</select>
	
	<!-- 메인페이지 추천 순으로 정렬한 All Live 방송 목록 조회용 쿼리문 (정언) -->
	<select id="sortRAllLiveList" resultMap="broadListResultSet">
		SELECT BH.BHNO, BC.BROAD_ADDRESS, M.MNO, M.NICK_NAME, BH.BH_START_DATE, BH.BH_END_DATE, BH.BH_STATUS, BH.COUNT_VIEWERS, BH.BCNO, BH.COUNT_RECOMMENDATION, BH.BROAD_TITLE, BH.BROAD_PWD, BH.BROAD_CATEGORY , BH.ADULT
		FROM BROAD_HIS BH 
		JOIN BROAD_CENTER BC ON(BH.BCNO = BC.BCNO)
		JOIN MEMBER M ON(BC.MNO = M.MNO)
		WHERE BH_START_DATE = TO_CHAR(SYSDATE, 'YY/MM/DD')
		ORDER BY COUNT_RECOMMENDATION DESC
	</select>
	
	<!-- 메인페이지 추천 순으로 정렬한 All Vod 방송 목록 조회용 쿼리문 (정언) -->
	<select id="sortRAllVodList" resultMap="broadListResultSet">
		<![CDATA[
		SELECT BH.BHNO, BC.BROAD_ADDRESS, M.MNO, M.NICK_NAME, BH.BH_START_DATE, BH.BH_END_DATE, BH.BH_STATUS, BH.COUNT_VIEWERS, BH.BCNO, BH.COUNT_RECOMMENDATION, BH.BROAD_TITLE, BH.BROAD_PWD, BH.BROAD_CATEGORY , BH.ADULT
		FROM BROAD_HIS BH 
		JOIN BROAD_CENTER BC ON(BH.BCNO = BC.BCNO)
		JOIN MEMBER M ON(BC.MNO = M.MNO)
		WHERE BH_START_DATE <> TO_CHAR(SYSDATE, 'YY/MM/DD')
		ORDER BY COUNT_RECOMMENDATION DESC
		]]>
	</select>
	
	<!-- 메인페이지 추천 순으로 정렬한 All Live 방송 목록 조회용 쿼리문 -조건있음 (정언) -->
	<select id="sortRAllLiveList2" resultMap="broadListResultSet">
		SELECT BH.BHNO, BC.BROAD_ADDRESS, M.MNO, M.NICK_NAME, BH.BH_START_DATE, BH.BH_END_DATE, BH.BH_STATUS, BH.COUNT_VIEWERS, BH.BCNO, BH.COUNT_RECOMMENDATION, BH.BROAD_TITLE, BH.BROAD_PWD, BH.BROAD_CATEGORY , BH.ADULT
		FROM BROAD_HIS BH 
		JOIN BROAD_CENTER BC ON(BH.BCNO = BC.BCNO)
		JOIN MEMBER M ON(BC.MNO = M.MNO)
		WHERE BH_START_DATE = TO_CHAR(SYSDATE, 'YY/MM/DD')
		AND BROAD_CATEGORY = #{condition}
		ORDER BY COUNT_RECOMMENDATION DESC
	</select>
	
	<!-- 메인페이지 추천 순으로 정렬한 All Vod 방송 목록 조회용 쿼리문 -조건있음 (정언) -->
	<select id="sortRAllVodList2" resultMap="broadListResultSet">
		<![CDATA[
		SELECT BH.BHNO, BC.BROAD_ADDRESS, M.MNO, M.NICK_NAME, BH.BH_START_DATE, BH.BH_END_DATE, BH.BH_STATUS, BH.COUNT_VIEWERS, BH.BCNO, BH.COUNT_RECOMMENDATION, BH.BROAD_TITLE, BH.BROAD_PWD, BH.BROAD_CATEGORY , BH.ADULT
		FROM BROAD_HIS BH 
		JOIN BROAD_CENTER BC ON(BH.BCNO = BC.BCNO)
		JOIN MEMBER M ON(BC.MNO = M.MNO)
		WHERE BH_START_DATE <> TO_CHAR(SYSDATE, 'YY/MM/DD')
		AND BROAD_CATEGORY = #{condition}
		ORDER BY COUNT_RECOMMENDATION DESC
		]]>
	</select>
	
	<!-- 최근본방송 -->
	<!-- 즐겨찾기에서 최근 본 Live 방송 수 조회용 쿼리문 (정언) -->
	<select id="lLiveListCount" parameterType="_int" resultType="_int">
		<![CDATA[
		SELECT COUNT(*)
		FROM (SELECT ROWNUM, L.BHNO, L.BROAD_ADDRESS, L.MNO, L.NICK_NAME, L.BH_START_DATE, L.BH_END_DATE, L.BH_STATUS, L.COUNT_VIEWERS, L.BCNO, L.COUNT_RECOMMENDATION, L.BROAD_TITLE, L.BROAD_PWD, L.BROAD_CATEGORY, L.ADULT
			  FROM (SELECT BH.BHNO, BC.BROAD_ADDRESS, M.MNO, M.NICK_NAME, BH.BH_START_DATE, BH.BH_END_DATE, BH.BH_STATUS, BH.COUNT_VIEWERS, BH.BCNO, BH.COUNT_RECOMMENDATION, BH.BROAD_TITLE, BH.BROAD_PWD, BH.BROAD_CATEGORY , BH.ADULT
		      FROM BROAD_HIS BH 
		      JOIN BROAD_CENTER BC ON(BH.BCNO = BC.BCNO)
		      JOIN MEMBER M ON(BC.MNO = M.MNO)
		      ORDER BY COUNT_VIEWERS DESC) L
		      JOIN VIEW_HIS VH ON(VH.BHNO = L.BHNO)
		      WHERE ROWNUM <= 10
		      AND L.BH_START_DATE = TO_CHAR(SYSDATE, 'YY/MM/DD')
		      AND VH.MNO = #{mno})
		]]>
	</select>
	
	
	<!-- 즐겨찾기에서 최근 본 Live 방송 목록 조회용 쿼리문 (정언) -->
	<select id="selectlLiveList" parameterType="_int" resultMap="broadListResultSet">
		<![CDATA[
		SELECT ROWNUM, L.BHNO, L.BROAD_ADDRESS, L.MNO, L.NICK_NAME, L.BH_START_DATE, L.BH_END_DATE, L.BH_STATUS, L.COUNT_VIEWERS, L.BCNO, L.COUNT_RECOMMENDATION, L.BROAD_TITLE, L.BROAD_PWD, L.BROAD_CATEGORY, L.ADULT
		FROM (SELECT BH.BHNO, BC.BROAD_ADDRESS, M.MNO, M.NICK_NAME, BH.BH_START_DATE, BH.BH_END_DATE, BH.BH_STATUS, BH.COUNT_VIEWERS, BH.BCNO, BH.COUNT_RECOMMENDATION, BH.BROAD_TITLE, BH.BROAD_PWD, BH.BROAD_CATEGORY , BH.ADULT
		      FROM BROAD_HIS BH 
		      JOIN BROAD_CENTER BC ON(BH.BCNO = BC.BCNO)
		      JOIN MEMBER M ON(BC.MNO = M.MNO)
		      ORDER BY COUNT_VIEWERS DESC) L
		JOIN VIEW_HIS VH ON(VH.BHNO = L.BHNO)
		WHERE ROWNUM <= 10
		AND L.BH_START_DATE = TO_CHAR(SYSDATE, 'YY/MM/DD')
		AND VH.MNO = #{mno}
		ORDER BY VH.VIEW_START_DATE DESC
		]]>
	</select>
	
	<!-- 즐겨찾기에서 최근 본 Vod 방송 수 조회용 쿼리문 (정언) -->
	<select id="lVodListCount" parameterType="_int" resultType="_int">
		<![CDATA[
		SELECT COUNT(*)
		FROM (SELECT BH.BHNO, BC.BROAD_ADDRESS, M.MNO, M.NICK_NAME, BH.BH_START_DATE, BH.BH_END_DATE, BH.BH_STATUS, BH.COUNT_VIEWERS, BH.BCNO, BH.COUNT_RECOMMENDATION, BH.BROAD_TITLE, BH.BROAD_PWD, BH.BROAD_CATEGORY , BH.ADULT
		      FROM BROAD_HIS BH 
		      JOIN BROAD_CENTER BC ON(BH.BCNO = BC.BCNO)
		      JOIN MEMBER M ON(BC.MNO = M.MNO)
		      JOIN VIEW_HIS VH ON(VH.BHNO = BH.BHNO)
		      WHERE BH_START_DATE <> TO_CHAR(SYSDATE, 'YY/MM/DD')
		      AND VH.MNO = #{mno})
		]]>
	</select>
	
	
	<!-- 즐겨찾기에서 최근 본 Vod 방송 목록 조회용 쿼리문 (정언) -->
	<select id="selectlVodList" parameterType="_int" resultMap="broadListResultSet">
		<![CDATA[
		SELECT BH.BHNO, BC.BROAD_ADDRESS, M.MNO, M.NICK_NAME, BH.BH_START_DATE, BH.BH_END_DATE, BH.BH_STATUS, BH.COUNT_VIEWERS, BH.BCNO, BH.COUNT_RECOMMENDATION, BH.BROAD_TITLE, BH.BROAD_PWD, BH.BROAD_CATEGORY , BH.ADULT
		FROM BROAD_HIS BH 
		JOIN BROAD_CENTER BC ON(BH.BCNO = BC.BCNO)
		JOIN MEMBER M ON(BC.MNO = M.MNO)
		JOIN VIEW_HIS VH ON(VH.BHNO = BH.BHNO)
		WHERE BH_START_DATE <> TO_CHAR(SYSDATE, 'YY/MM/DD')
		AND VH.MNO = #{mno}
		ORDER BY VH.VIEW_START_DATE DESC
		]]>
	</select>
	
	<!-- 즐겨찾기 -->
	<!-- 즐겨찾기 한 BJ 수 조회용 쿼리문 (정언) -->
	<select id="fBjListCount" parameterType="_int" resultType="_int">
		SELECT COUNT(*)
		FROM (SELECT F.FANO, F.SNO, M.NICK_NAME, (SELECT COUNT(*) FROM FAVORITES FC WHERE FC.SNO = F.SNO) FAVCOUNT
		      FROM FAVORITES F
		      JOIN MEMBER M ON(F.SNO = M.MNO)
		      WHERE F.MNO = #{mno}
		      AND M.IS_STREAMER = 'Y')
	</select>
	
	
	<!-- 즐겨찾기 한 BJ 목록 조회용 쿼리문 (정언) -->
	<select id="selectfBjList" parameterType="_int" resultMap="favBjResultSet">
		SELECT F.FANO, F.SNO MNO, M.NICK_NAME, (SELECT COUNT(*) FROM FAVORITES FC WHERE FC.SNO = F.SNO) FAVCOUNT, M.GENDER
		FROM FAVORITES F
		JOIN MEMBER M ON(F.SNO = M.MNO)
		WHERE F.MNO = #{mno}
		AND M.IS_STREAMER = 'Y'
		ORDER BY (SELECT COUNT(*) FROM FAVORITES FC WHERE FC.SNO = F.SNO) DESC
	</select>
	
	<!-- 구독한BJ -->
	
	<!--  방송 시작시 알람 테이블 이력추가할 데이터 조회 (소연) -->
	<select  id="subInfoMap" resultType="java.util.HashMap">
		SELECT M.MNO,S.SNO,SU.SUNO
		FROM MEMBER M,MEMBER ST,STREAMER S,SUBSCRIPTION_HIS SU
		WHERE M.MNO = SU.MNO
		AND ST.MNO = S.MNO
		AND S.SNO = SU.SNO
		AND ST.MNO = #{mno}
	</select>
	
	<!-- 나를 구독하는 사람들에게 알람 보내기 (소연) -->
	<insert id="insertAlarm" parameterType="java.util.HashMap">
		INSERT INTO ALARM_HIS VALUES (SEQ_ANO.NEXTVAL,#{MNO},#{SNO},NULL,#{SUNO},SYSDATE,0,1,'N')
	</insert>
	
	<!-- 이지 즐겨찾기 했는지 -->
	<select id="isFavoStreamer" parameterType="java.util.HashMap" resultType="_int">
		SELECT COUNT(*) FROM FAVORITES
		WHERE SNO = (SELECT SNO FROM STREAMER
										JOIN MEMBER USING(MNO)
										JOIN BROAD_CENTER USING(MNO)
										WHERE BROAD_ADDRESS=#{sid})
		AND MNO = (SELECT MNO FROM MEMBER WHERE MID=#{mid})
		AND FA_STATUS='Y'
	</select>
	
	<!-- 즐겨찾기 -->
	<insert id="favoStreamer" parameterType="java.util.HashMap">
		INSERT INTO FAVORITES(FANO,FA_STATUS,SNO,MNO)
		VALUES(SEQ_FANO.NEXTVAL,DEFAULT,(
										SELECT SNO FROM STREAMER
										JOIN MEMBER USING(MNO)
										JOIN BROAD_CENTER USING(MNO)
										WHERE BROAD_ADDRESS=#{sid}
		),(SELECT MNO FROM MEMBER WHERE MID=#{mid}))
	</insert>
	
	<!-- 좋아요 -->
	<update id="selectedLike" parameterType="java.util.HashMap">
		UPDATE MEMBER
		SET RECEIVED_LIKES=(SELECT RECEIVED_LIKES FROM MEMBER WHERE MID=#{sid})+1
		WHERE MID=#{sid}
	</update>
	
	<!-- 방송 중 신고 -->
	<insert id="selectedReport" parameterType="java.util.HashMap">
		INSERT INTO BOARD
		VALUES(SEQ_BNO.NEXTVAL, #{rTitle}, #{rContent}, 
        SYSDATE, NULL, 0, 'MREPORT', NULL, NULL, NULL, NULL,
        (SELECT MNO FROM MEMBER WHERE MID=#{mid}), #{rType}, 'R', 
        (SELECT MNO FROM MEMBER WHERE MID=#{sid}), 5)
	</insert>
</mapper>