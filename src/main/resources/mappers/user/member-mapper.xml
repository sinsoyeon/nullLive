<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
 <mapper namespace="Member">
	<resultMap type="Member" id="memberResultSet">
		<id property="mno" column="MNO"/>
		<result property="mid" column="MID"/>
		<result property="mpwd" column="MPWD"/>
		<result property="email" column="EMAIL"/>
		<result property="emailC" column="EMAIL_CHECK"/>
		<result property="phone" column="PHONE"/>
		<result property="agency" column="AGENCY"/>
		<result property="name" column="NAME"/>
		<result property="nickName" column="NICK_NAME"/>
		<result property="gender" column="GENDER"/>
		<result property="enrollDate" column="ENROLL_DATE"/>
		<result property="isAdmin" column="IS_ADMIN"/>
		<result property="point" column="POINT"/>
		<result property="receivedLikes" column="RECEIVED_LIKES"/>
		<result property="cumulativeReport" column="CUMULATIVE_REPORT"/>
		<result property="mstatus" column="M_STATUS"/>
		<result property="pwdModifyDate" column="PWD_MODIFY_DATE"/>
		<result property="withdrawalDate" column="WITHDRAWAL_DAET"/>
		<result property="isStreamer" column="IS_STREAMER"/>
		<result property="birthday" column="BIRTHDAY"/>
		<result property="adult" column="ADULT"/>
	</resultMap>
	
	<resultMap type="Attachment" id="AttachmentResultSet">
		<id property="attno" column="ATTNO"/>
		<result property="uploadDate" column="UPLOAD_DATE"/>
		<result property="filePath" column="FILE_PATH"/>
		<result property="modifyDate" column="MODIFY_DATE"/>
		<result property="download" column="DOWNLOAD"/>
		<result property="originName" column="ORIGIN_NAME"/>
		<result property="changeName" column="CHANGE_NAME"/>
		<result property="attDiv" column="ATT_DIV"/>
		<result property="attStatus" column="ATT_STATUS"/>
	</resultMap>
	
	<resultMap type="MySub" id="SubscriptionResultSet">
		<id property="suno" column="SUNO"/>
		<result property="mno" column="MNO"/>
		<result property="mid" column="MID"/>
		<result property="sno" column="SNO"/>
		<result property="sid" column="SID"/>
		<result property="nickName" column="NICK_NAME"/>
		<result property="su_start_date" column="시작일"/>
		<result property="su_period_date" column="종료일"/>
		<result property="su_status" column="SU_STATUS"/>
		<result property="broadAddress" column="BROAD_ADDRESS"/>
		<result property="byn" column="방송여부"/>
	</resultMap>
	
	<resultMap type="MyPartner" id="MyPartnerResultSet">
		<id property="mno" column="MNO"/>
		<result property="onair" column="ONAIR"/>
		<result property="sNnick" column="S_NICK"/>
		<result property="perprice" column="PERPRICE"/>
		<result property="startDate" column="C_SDATE"/>
		<result property="endDate" column="C_EDATE"/>
		<result property="ptype" column="PTYPE"/>
	</resultMap>

	<!-- 로그인 정보 가져오기 -->
	<select id="selectMember" resultMap="memberResultSet" parameterType="Member">
		SELECT *
		FROM MEMBER
		WHERE MID = #{mid}
	</select>
	<!-- mno로 맴버 조회 -->
	<select id="selectMemberMno" resultMap="memberResultSet" parameterType="_int">
		SELECT *
		FROM MEMBER
		WHERE MNO = #{mno}
		AND M_STATUS = 'Y'
	</select>
	
	<select id="selectPwd" resultType="java.lang.String" parameterType="java.lang.String">
		SELECT MPWD
		FROM MEMBER
		WHERE MID = #{mid}
	</select>
	
	<insert id="insertMember" parameterType="Member">
		INSERT INTO MEMBER(MNO,MID,MPWD,EMAIL,EMAIL_CHECK,PHONE,AGENCY,NAME,NICK_NAME,
				GENDER,ENROLL_DATE,POINT,IS_ADMIN,RECEIVED_LIKES,CUMULATIVE_REPORT,
				M_STATUS,PWD_MODIFY_DATE,IS_STREAMER,BIRTHDAY,ADULT)
		VALUES (SEQ_MNO.NEXTVAL,#{mid},#{mpwd},#{email},DEFAULT,#{phone},#{agency},#{name},#{name},
		#{gender},SYSDATE,0,DEFAULT,0,0,DEFAULT,SYSDATE,DEFAULT,#{birthday},DEFAULT)
	</insert>
	
	<select id="selectMno" resultType="_int">
		SELECT SEQ_MNO.CURRVAL FROM DUAL
	</select>
	
	<update id="updateMember" parameterType="Member">
		UPDATE MEMBER SET
		EMAIL=#{email},
		NICK_NAME=#{nickName}
		WHERE MID=#{mid}
	</update>
	
	<update id="updatePwd" parameterType="Member">
		UPDATE MEMBER SET
		MPWD=#{mpwd},
		PWD_MODIFY_DATE=SYSDATE
		WHERE MID=#{mid}
	</update>
	
	<insert id="insertProImageDefault" parameterType="Attachment">
		INSERT INTO ATTACHMENT(ATTNO,UPLOAD_DATE,FILE_PATH,MODIFY_DATE,DOWNLOAD,
							ORIGIN_NAME,CHANGE_NAME,ATT_DIV,ATT_STATUS)
		VALUES (SEQ_ATTNO.NEXTVAL,SYSDATE,#{filePath},SYSDATE,DEFAULT,
				#{originName},#{changeName},'이미지',DEFAULT)
	</insert>
	
	<select id="selectAttno" resultType="_int">
		SELECT SEQ_ATTNO.CURRVAL FROM DUAL
	</select>
	
	<insert id="insertProImageManage" parameterType="java.util.HashMap">
		INSERT INTO ATT_MANAGE(USAGE,AMNO,ATTNO,MNO)
		VALUES ('프로필이미지',SEQ_AMNO.NEXTVAL,#{attno},#{mno})
	</insert>
	
	<select id="selectProfile" parameterType="_int" resultMap="AttachmentResultSet">
		SELECT *
		FROM ATTACHMENT A
		JOIN ATT_MANAGE M USING(ATTNO)
		WHERE ATT_STATUS='Y'
		AND MNO=#{mno}
	</select>
	
	<select id="selectProfileNo" parameterType="Member" resultType="_int">
		SELECT ATTNO
		FROM ATTACHMENT
		JOIN ATT_MANAGE M USING(ATTNO)
		WHERE ATT_STATUS='Y'
		AND MNO=#{mno}
	</select>
	
	<update id="updatePreProImage" parameterType="_int">
		UPDATE ATTACHMENT SET
		ATT_STATUS='N'
		WHERE ATTNO=#{attno}
	</update>
	
	<insert id="insertProImage" parameterType="Attachment">
		INSERT INTO ATTACHMENT(ATTNO,UPLOAD_DATE,FILE_PATH,MODIFY_DATE,DOWNLOAD,
							ORIGIN_NAME,CHANGE_NAME,ATT_DIV,ATT_STATUS)
		VALUES (SEQ_ATTNO.NEXTVAL,SYSDATE,#{filePath},SYSDATE,DEFAULT,
				#{originName},#{changeName},'이미지',DEFAULT)
	</insert>
	
	<update id="updateProImageManage" parameterType="java.util.HashMap">
		UPDATE ATT_MANAGE SET
		ATTNO=#{attno}
		WHERE MNO=#{mno}
	</update>
	
	<select id="duplicateTest" parameterType="java.lang.String" resultType="_int">
		SELECT COUNT(*)
		FROM MEMBER
		WHERE MID=#{mid}
	</select>
	
	<!-- 관리자 조회용  -->
	<select id="memberSelect"  resultMap="memberResultSet">
		SELECT *
 		FROM(SELECT ROWNUM RNUM, P.*
	        	FROM(SELECT *
					FROM MEMBER
					WHERE MID != 'admin'
					ORDER BY 1 DESC) P)
  		WHERE RNUM BETWEEN #{start} AND #{last}
	</select>
	
	<select id="totalMemberSelect"  resultType="_int">
		SELECT COUNT(*)
		FROM MEMBER
		WHERE MID != 'admin'
	</select>
	
	
	<select id="firstLoginCheck" parameterType="java.lang.String" resultType="_int">
		SELECT COUNT(*)
		FROM MEMBER
		WHERE MID=#{id}
		AND M_STATUS='Y'
	</select>
	
	<select id="selectKakaoPwd" parameterType="java.lang.String" resultType="java.lang.String">
		SELECT MPWD
		FROM MEMBER
		WHERE MID = #{userId}
		AND M_STATUS = 'Y'
	</select>
	
	<select id="selectKakaoMember" parameterType="java.lang.String" resultMap="memberResultSet">
		SELECT *
		FROM MEMBER
		WHERE MID = #{userId}
		AND M_STATUS = 'Y'
	</select>
   
	<!-- 회원가입 방송국 개설 -->
	<insert id="insertBroadCenter" parameterType="Member">
		INSERT INTO BROAD_CENTER(BCNO,BROAD_ADDRESS,MNO)
		VALUES(SEQ_BCNO.NEXTVAL,#{mid},#{mno})
	</insert>
	
	<select id="existBankAccount" parameterType="_int" resultType="_int">
		SELECT COUNT(*)
		FROM BANK_ACCOUNT
		WHERE MNO=#{mno}
		AND BANK_STATUS='Y'
	</select>
	
	<!-- 이메일 인증 완료 -->
	<update id="joinConfirm" parameterType="java.lang.String">
		UPDATE MEMBER
		SET EMAIL_CHECK='Y'
		WHERE MID=#{mid}
	</update>
	
	<!-- 회원 탈퇴 -->
	<update id="secession" parameterType="Member">
		UPDATE MEMBER
		SET M_STATUS='N'
		WHERE MID=#{mid}
	</update>
	
	<!-- 정지 기간 가져오기 -->
	<select id="getBanDate" parameterType="Member" resultType="java.util.HashMap">
		SELECT BAN_DATE,BAN_END
		FROM BAN
		WHERE MNO=#{mno}
	</select>
	
	<!-- 아이디 찾기 -->
	<select id="getSearchId" parameterType="Member" resultType="java.lang.String">
		SELECT MID
		FROM MEMBER
		WHERE NAME=#{name}
		AND PHONE=#{phone}
		AND M_STATUS='Y'
	</select>
	
	<!-- 비밀번호 재발급 -->
	<update id="pwdReload" parameterType="Member">
		UPDATE MEMBER
		SET MPWD=#{mpwd}
		WHERE MID=#{mid}
	</update>
	
	<!-- 구독 리스트 가져오기 -->
	<select id="getSubList" parameterType="Member" resultMap="SubscriptionResultSet">
		SELECT SUNO, M.MID MID,SU_START_DATE 시작일,SU_PERIOD_DATE 종료일,S.MID SID,S.NICK_NAME NICK_NAME,C.BROAD_ADDRESS BROAD_ADDRESS,
			DECODE((SELECT COUNT(*) FROM BROAD_HIS B JOIN BROAD_CENTER C ON(C.BCNO=B.BCNO) WHERE C.MNO=S.MNO AND B.BH_STATUS='Y'),0,'N','Y') 방송여부
        FROM MEMBER M
		JOIN SUBSCRIPTION_HIS H ON (M.MNO = H.MNO)
		JOIN MEMBER S ON (H.SNO = S.MNO)
        JOIN BROAD_CENTER C ON (S.MNO = C.MNO)
		WHERE M.MNO = #{mno}
		AND SU_STATUS='Y'
	</select>
	
	<!-- 휴대폰 변경 -->
	<update id="phoneChange" parameterType="Member">
		UPDATE MEMBER
		SET AGENCY=#{agency},
		PHONE=#{phone}
		WHERE MID=#{mid}
	</update>
	
	<!-- 성인 인증 -->
	<update id="confrimAdult" parameterType="Member">
		UPDATE MEMBER
		SET ADULT='Y'
		WHERE MID=#{mid}
	</update>
	
	<!-- 파트너 조회 -->
	<select id="partner" resultMap="MyPartnerResultSet"  parameterType="Member">
		SELECT M.MNO , NVL(BROAD.BH_STATUS, 'N') ONAIR, MB.NICK_NAME S_NICK, C.PERPRICE , TO_CHAR(C.C_SDATE) C_SDATE, NVL(TO_CHAR(C.C_EDATE),'미정') C_EDATE, P.PTYPE PTYPE
		FROM MEMBER M
		JOIN PARTNER P ON(M.MNO = P.MNO)
		JOIN MEMBER MB ON(MB.MNO = P.SNO)
		JOIN CONTRACT C ON(P.CNO = C.CNO)
		LEFT JOIN (SELECT B.MNO, BH_STATUS
		            FROM BROAD_CENTER B
		            JOIN BROAD_HIS BH ON(BH.BCNO = B.BCNO)
		            WHERE BH_STATUS = 'Y') BROAD ON(BROAD.MNO = MB.MNO)
		WHERE M.MNO = #{mno}
	</select>
	
	<!-- 페이징용 알람 카운트 조회(소연) -->
	<select id="selectAlarmCount" resultType="_int">
		select count(*) from alarm_his where mno = #{mno}
	</select>
	
	<!-- 알람 조회 -->
	<select id="selectMyAlmList" resultType="java.util.HashMap">
		SELECT ANO,ST.NICK_NAME,ST.MID,A.ATYPE,ALM_STATUS,TO_CHAR(ALM_DATE,'YYYY/MM/DD HH24:MI:SS') AS ALM_DATE,
                (SELECT COUNT(*) 
                FROM MEMBER M,ALARM_HIS A
                WHERE M.MNO = A.MNO 
                AND ALM_STATUS ='N' 
                AND M.MNO = #{mno}) AS COUNT     
		FROM MEMBER M,MEMBER ST,STREAMER S,SUBSCRIPTION_HIS SU,ALARM_HIS A
		WHERE M.MNO = SU.MNO
		AND M.MNO = A.MNO
		AND ST.MNO = S.MNO
		AND S.SNO = SU.SNO
		AND A.SNO = A.SNO
		AND SU.SUNO = A.SUNO
		AND M.MNO = #{mno}
		ORDER BY ALM_STATUS ASC
	</select>
	
	<!-- 알람 읽음 처리 -->
	<update id="updateAlarm" parameterType="java.util.HashMap">
	 	UPDATE ALARM_HIS SET ALM_STATUS = 'Y' WHERE ANO = #{ano}
	</update>
		
</mapper>