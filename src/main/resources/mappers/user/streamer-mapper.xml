<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Streamer">

	<!-- Streamer Vo Result Map(소연) -->
	<resultMap type="Streamer" id="streamerResultSet">
		<id property="sno" column="SNO" />
		<result property="mno" column="MND" />
		<result property="bstart_date" column="BSTART_DATE" />
		<result property="cumulative_selection"
			column="CUMULATIVE_SELECTION" />
		<result property="bank_code" column="BANK_CODE" />
		<result property="account" column="ACCOUNT" />
		<result property="holder" column="HOLDER" />
		<result property="is_auth" column="IS_AUTH" />
		<result property="nickName" column="NICK_NAME" />
	</resultMap>

	<!-- 스트리머 아이디 검색 후 SNO 반환 (소연) -->
	<select id="selectStreamer" resultType="java.util.HashMap" parameterType="java.lang.String">
		SELECT SNO,MID,NICK_NAME
		FROM STREAMER,MEMBER
		WHERE MEMBER.MNO =STREAMER.MNO
		AND MID = #{streamer}
	</select>


	<!-- 내가 구독한 사람 조회(소연) -->
	<select id="selectSubList" parameterType="_int"
		resultType="java.util.HashMap">
		SELECT SUNO,ST.NICK_NAME,TO_CHAR(SU_START_DATE,'YYYY/MM/DD') AS SU_START_DATE
									,NVL(TO_CHAR(SU_PERIOD_DATE,'YYYY/MM/DD'),'2999/12/31') AS SU_PERIOD_DATE
		FROM
		MEMBER ST,MEMBER M,STREAMER S,SUBSCRIPTION_HIS H
		WHERE ST.MNO = S.MNO
		AND M.MNO = H.MNO
		AND S.SNO = H.SNO
		AND M.MNO = #{MNO}
	</select>

	<!-- 나를 구독한 사람 조회(소연) => 시간나면 구독 시작일 보여주기 -->
	<select id="selectForMeSub" parameterType="_int"
		resultType="java.util.HashMap">
		select SUNO,m.NICK_NAME,MSG
		from member st,member m,streamer
		s,subscription_his h
		where st.mno = s.mno
		AND M.MNO = H.MNO
		AND S.SNO = H.SNO
		and st.MNO = #{mno}
	</select>

	<!-- 내가 후원한 사람 조회(소연) -->
	<select id="selectSponList" parameterType="_int" resultType="java.util.HashMap">
		SELECT TO_CHAR(SPON_DATE,'YYYY/MM/DD') AS SPON_DATE,ST.MID,ST.NICK_NAME,SPON_AMOUNT
		FROM MEMBER M,MEMBER ST,STREAMER S, SPON_HIS H
		WHERE ST.MNO = S.MNO
		AND ST.MNO = H.SNO
		AND M.MNO = H.MNO
		AND M.MNO = #{mno}
		ORDER BY SPON_DATE DESC
	</select>
	
	
	<!-- 나를 후원한 사람 조회(소연) -->
	<select id="selectSponForMe" parameterType="_int" resultType="java.util.HashMap">
		SELECT TO_CHAR(SPON_DATE,'YYYY/MM/DD') AS SPON_DATE ,M.MID,M.NICK_NAME,SPON_AMOUNT
		FROM MEMBER M,MEMBER ST,STREAMER S, SPON_HIS H
		WHERE ST.MNO = S.MNO
		AND ST.MNO = H.SNO
		AND M.MNO = H.MNO
		AND ST.MNO = #{mno}
		ORDER BY SPON_DATE DESC
	</select>
	
	
	<!-- 검색 조건에 따른 후원자 리스트 조회(소연) -->
	<select id="searchSponList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT TO_CHAR(SPON_DATE,'YYYY/MM/DD') AS SPON_DATE ,M.MID,M.NICK_NAME,SPON_AMOUNT
		FROM MEMBER M,MEMBER ST,STREAMER S, SPON_HIS H
		WHERE ST.MNO = S.MNO
		AND ST.MNO = H.SNO
		AND M.MNO = H.MNO
		AND ST.MNO = #{mno}
		<if test="searchCondition==1">
		AND M.NICK_NAME LIKE '%'||#{searchValue}||'%'
		</if>
		<if test="searchCondition==2">
		AND M.MID LIKE '%'||#{searchValue}||'%'
		</if>	
		ORDER BY SPON_DATE DESC
	</select>	
	
	
	<!-- 환전 신청 내용 조회 -->
	 <select id="selectExcList" resultType="java.util.HashMap" parameterType="_int">
		SELECT EXC_STATUS,EXC_FEE,EXCNO,EXC_AMOUNT,TO_CHAR(APPLICATION_DATE,'YYYY/MM/DD') AS APPLICATION_DATE,NICK_NAME
		FROM MEMBER,EXCHANGE
		WHERE MEMBER.MNO = EXCHANGE.MNO
		AND MEMBER.MNO = #{mno}
	 	ORDER BY APPLICATION_DATE DESC
	 </select>
	 
	 <!-- 환전 신청 내용 상세 보기 -->
	 <select id="selectOneExc" resultType="java.util.HashMap" parameterType="java.util.HashMap">
		SELECT EXC_STATUS,EXC_FEE,EXCNO,EXC_AMOUNT,TO_CHAR(APPLICATION_DATE,'YYYY/MM/DD') AS APPLICATION_DATE,NICK_NAME
		FROM MEMBER,EXCHANGE
		WHERE MEMBER.MNO = EXCHANGE.MNO
		AND MEMBER.MNO = #{mno}
		AND EXCNO = #{excno}
		ORDER BY APPLICATION_DATE DESC
	 </select>
	 
	 <!-- 포인트 충전 내역 조회 -->
	<select id="selectChargeList" resultType="java.util.HashMap">
		SELECT CHNO,CHAMOUNT,TO_CHAR(CHDATE,'YYYY/MM/DD') AS CHDATE,MEMBER.POINT
		FROM MEMBER,CHARGE
		WHERE MEMBER.MNO = CHARGE.MNO
		AND MEMBER.MNO=#{mno}
	</select>
	
	<!-- 장기 구독자 추가(소연) -->
	<insert id="insertSub" parameterType="Streamer">
		INSERT INTO
		SUBSCRIPTION_HIS(SUNO,MNO,SNO,SU_START_DATE,SU_PERIOD_DATE,SU_STATUS)
		VALUES (SEQ_SUNO.NEXTVAL,#{mno},#{sno},sysdate,null,'Y')
	</insert>

	<!-- 개월별 구독자 추가(소연) -->
	<insert id="insertMnthlSbscr" parameterType="java.util.HashMap">
		INSERT INTO
		SUBSCRIPTION_HIS(SUNO,MNO,SNO,SU_START_DATE,SU_PERIOD_DATE,SU_STATUS)
		VALUES (SEQ_SUNO.NEXTVAL,#{streamer.mno},#{streamer.sno},sysdate,
		<if test="amount==19"> add_months(sysdate,3)</if>
		<if test="amount==25"> add_months(sysdate,6)</if>
		<if test="amount==30"> add_months(sysdate,12)</if>
		,
		'Y')
	</insert>


	<!-- 후원 리스트 추가(소연) -->
	<insert id="insertNP" parameterType="java.util.HashMap">
		INSERT INTO SPON_HIS
		VALUES
		(SEQ_SPNO.NEXTVAL,#{amount},SYSDATE,#{streamer.mno},#{streamer.sno})
	</insert>
	
	<!-- 환전 신청 추가 (소연) -->
	<insert id="insertExchange" parameterType="java.util.HashMap">
		INSERT INTO EXCHANGE 
		VALUES (SEQ_ENO.NEXTVAL,${amount},SYSDATE,${exc_fee},'N',${mno},null)	
	</insert>

	<!-- 환전 신청 후 포인트 차감(소연) -->
	<update id="updatePoint" parameterType="java.util.HashMap">
		UPDATE MEMBER 
		SET POINT = (SELECT POINT FROM MEMBER WHERE MNO = #{mno}) - #{amount}
		WHERE MNO = #{mno} 
	</update>
	
  
	<!-- isStreamer Update(회륜) -->
	<update id="isStreamerUpdate" parameterType="Member">
		UPDATE MEMBER
		SET IS_STREAMER='Y'
		WHERE MNO=#{mno}
	</update>
	
	<!-- insert Streamer(회륜) -->
	<insert id="insertStreamer" parameterType="java.util.HashMap">
		INSERT INTO STREAMER(SNO,MNO,BSTART_DATE,CUMULATIVE_SELECTION,BANK_CODE,ACCOUNT,HOLDER,IS_AUTH)
		VALUES(SEQ_SNO.NEXTVAL,#{mno},SYSDATE,DEFAULT,#{bank_code},#{account},#{holder},DEFAULT)
	</insert>

	<!-- 스트리머 정보 가져오기(회륜) -->
	<select id="getStreamerInfo" parameterType="_int" resultMap="streamerResultSet">
		SELECT *
		FROM STREAMER
		WHERE MNO=#{mno}
	</select>
	
	<!-- 스트리머 계좌 정보 수정(회륜) -->
	<update id="updateStreamerInfo" parameterType="Streamer">
		UPDATE STREAMER
		SET ACCOUNT=#{account}, BANK_CODE=#{bank_code}, HOLDER=#{holder}
		WHERE MNO=#{mno}
	</update>
	
	<!-- 환전 신청 취소 (소연) -->
	<delete id="cancelExc" parameterType="java.util.HashMap">
		DELETE 
		FROM EXCHANGE
		WHERE MNO = #{mno}
		AND EXCNO = #{excno}
		AND EXC_STATUS = 'N'
	</delete>
</mapper>