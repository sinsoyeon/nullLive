<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Streamer">

	<!-- Streamer Vo Result Map(소연) -->
	<resultMap type="Streamer" id="streamerResultSet">
		<id property="sno" column="SNO" />
		<result property="mno" column="MND" />
		<result property="bstart_date" column="BSTART_DATE" />
		<result property="cumulative_selection" column="CUMULATIVE_SELECTION" ></result>
		<result property="bank_code" column="BANK_CODE" />
		<result property="account" column="ACCOUNT" />
		<result property="holder" column="HOLDER" />
		<result property="is_auth" column="IS_AUTH" />
		<result property="nickName" column="NICK_NAME" />
	</resultMap>
	
	<!-- Streamer Vo Result Map2(병욱) -->
   <resultMap type="Streamer" id="streamerResultSet2">
      <id property="sno" column="SNO" />
      <result property="mno" column="MNO" />
      <result property="bstart_date" column="BSTART_DATE" />
      <result property="cumulative_selection" column="CUMULATIVE_SELECTION" ></result>
      <result property="is_auth" column="IS_AUTH" />
   </resultMap>
	

	<!-- 스트리머 아이디 검색 후 SNO 반환 (소연) -->
	<select id="selectStreamer" resultType="java.util.HashMap"
		parameterType="java.lang.String">
		SELECT SNO,MID,NICK_NAME
		FROM STREAMER,MEMBER
		WHERE
		MEMBER.MNO =STREAMER.MNO
		AND MID = #{streamer}
	</select>


	<!-- 내가 구독한 사람 조회(소연) -->
	<select id="selectSubList" parameterType="_int"
		resultType="java.util.HashMap">
		SELECT
		SUNO,ST.NICK_NAME,TO_CHAR(SU_START_DATE,'YYYY/MM/DD') AS SU_START_DATE
		,NVL(TO_CHAR(SU_PERIOD_DATE,'YYYY/MM/DD'),'2999/12/31') AS
		SU_PERIOD_DATE
		FROM
		MEMBER ST,MEMBER M,STREAMER S,SUBSCRIPTION_HIS H
		WHERE ST.MNO = S.MNO
		AND M.MNO = H.MNO
		AND S.SNO = H.SNO
		AND M.MNO =
		#{MNO}
	</select>

	<!-- 나를 구독한 사람 조회(소연) => 시간나면 구독 시작일 보여주기 -->
	<select id="selectForMeSub" parameterType="_int"
		resultType="java.util.HashMap">
		select SUNO,m.NICK_NAME,MESSAGE
		from member st,member
		m,streamer
		s,subscription_his h
		where st.mno = s.mno
		AND M.MNO = H.MNO
		AND S.SNO = H.SNO
		and st.MNO = #{mno}
	</select>
	
	<!-- 내가 후원한 사람 페이징용 count 조회 -->
	<select  id="getSponCount" parameterType="_int" resultType="_int">
	SELECT COUNT(*)
	FROM (SELECT TO_CHAR(SPON_DATE,'YYYY/MM/DD') AS
		SPON_DATE,ST.MID,ST.NICK_NAME,SPON_AMOUNT
		FROM MEMBER M,MEMBER
		ST,STREAMER S, SPON_HIS H
		WHERE ST.MNO = S.MNO
		AND ST.MNO = H.SNO
		AND
		M.MNO = H.MNO
		AND M.MNO = #{mno}
		ORDER BY SPON_DATE DESC)
	</select>

	<!-- 내가 후원한 사람 조회(소연) -->
	<select id="selectSponList" parameterType="_int"
		resultType="java.util.HashMap">
		SELECT TO_CHAR(SPON_DATE,'YYYY/MM/DD') AS
		SPON_DATE,ST.MID,ST.NICK_NAME,SPON_AMOUNT
		FROM MEMBER M,MEMBER
		ST,STREAMER S, SPON_HIS H
		WHERE ST.MNO = S.MNO
		AND ST.MNO = H.SNO
		AND
		M.MNO = H.MNO
		AND M.MNO = #{mno}
		ORDER BY SPON_DATE DESC
	</select>

	<!-- 나를 후원한 사람 페이징용 -->
	<select id="getSponForMeCount" parameterType="_int"  resultType="_int">
		SELECT COUNT(*)
		FROM (SELECT TO_CHAR(SPON_DATE,'YYYY/MM/DD') AS SPON_DATE
		,M.MID,M.NICK_NAME,SPON_AMOUNT
		FROM MEMBER M,MEMBER ST,STREAMER S,
		SPON_HIS H
		WHERE ST.MNO = S.MNO
		AND ST.MNO = H.SNO
		AND M.MNO = H.MNO
		AND
		ST.MNO = #{mno})
	</select>


	<!-- 나를 후원한 사람 조회(소연) -->
	<select id="selectSponForMe" parameterType="_int"
		resultType="java.util.HashMap">
		SELECT TO_CHAR(SPON_DATE,'YYYY/MM/DD') AS SPON_DATE
		,M.MID,M.NICK_NAME,SPON_AMOUNT
		FROM MEMBER M,MEMBER ST,STREAMER S,
		SPON_HIS H
		WHERE ST.MNO = S.MNO
		AND ST.MNO = H.SNO
		AND M.MNO = H.MNO
		AND
		ST.MNO = #{mno}
		ORDER BY SPON_DATE DESC
	</select>


	<!-- 검색 조건에 따른 후원자 리스트 조회(소연) -->
	<select id="searchSponList" parameterType="java.util.HashMap"
		resultType="java.util.HashMap">
		SELECT TO_CHAR(SPON_DATE,'YYYY/MM/DD') AS SPON_DATE
		,M.MID,M.NICK_NAME,SPON_AMOUNT
		FROM MEMBER M,MEMBER ST,STREAMER S,
		SPON_HIS H
		WHERE ST.MNO = S.MNO
		AND ST.MNO = H.SNO
		AND M.MNO = H.MNO
		AND
		ST.MNO = #{mno}
		<if test="searchCondition==1">
			AND M.NICK_NAME LIKE '%'||#{searchValue}||'%'
		</if>
		<if test="searchCondition==2">
			AND M.MID LIKE '%'||#{searchValue}||'%'
		</if>
		ORDER BY SPON_DATE DESC
	</select>	
	
	<select id="getExcCount" resultType="_int" parameterType="_int">
		SELECT COUNT(*)
		FROM
		(SELECT EXC_STATUS,EXC_FEE,EXCNO,EXC_AMOUNT,TO_CHAR(APPLICATION_DATE,'YYYY/MM/DD') AS APPLICATION_DATE,NICK_NAME
		FROM MEMBER,EXCHANGE
		WHERE MEMBER.MNO =
		EXCHANGE.MNO
		AND MEMBER.MNO = #{mno}
	 	ORDER BY APPLICATION_DATE DESC)
	</select>
	
	
	
	
	<!-- 환전 신청 내용 조회(소연) -->
	 <select id="selectExcList" resultType="java.util.HashMap" parameterType="_int">
		SELECT EXC_STATUS,EXC_FEE,EXCNO,EXC_AMOUNT,TO_CHAR(APPLICATION_DATE,'YYYY/MM/DD') AS APPLICATION_DATE,NICK_NAME
		FROM MEMBER,EXCHANGE
		WHERE MEMBER.MNO =
		EXCHANGE.MNO
		AND MEMBER.MNO = #{mno}
	 	ORDER BY APPLICATION_DATE DESC
	 </select>
	 
	 <!-- 환전 신청 내용 상세 보기(소연) -->
	 <select id="selectOneExc" resultType="java.util.HashMap" parameterType="java.util.HashMap">
		SELECT EXC_STATUS,EXC_FEE,EXCNO,EXC_AMOUNT,TO_CHAR(APPLICATION_DATE,'YYYY/MM/DD') AS APPLICATION_DATE,NICK_NAME
		FROM MEMBER,EXCHANGE
		WHERE MEMBER.MNO =
		EXCHANGE.MNO
		AND MEMBER.MNO = #{mno}
		AND EXCNO = #{excno}
		ORDER BY APPLICATION_DATE DESC
	 </select>
	 
	 <!-- 포인트 충전 내역 조회(소연) -->
	<select id="selectChargeList" resultType="java.util.HashMap">
		SELECT
		CHNO,CHAMOUNT,TO_CHAR(CHDATE,'YYYY/MM/DD') AS CHDATE,MEMBER.POINT
		FROM
		MEMBER,CHARGE
		WHERE MEMBER.MNO = CHARGE.MNO
		AND MEMBER.MNO=#{mno}
	</select>
	
	<select id="getChargeCount" resultType="_int">
	SELECT COUNT(*)
	FROM (
			SELECT	CHNO,CHAMOUNT,TO_CHAR(CHDATE,'YYYY/MM/DD') AS CHDATE,MEMBER.POINT
			FROM
			MEMBER,CHARGE
			WHERE MEMBER.MNO = CHARGE.MNO
			AND MEMBER.MNO=#{mno}
		)
	
	</select>

	<!-- 나이별 구독 통계(소연) -->
	<select id="selectAgeData" resultType="java.util.HashMap">
	SELECT CEIL(TO_NUMBER(TO_CHAR(SYSDATE,'RRRR') - TO_CHAR(EXTRACT(YEAR FROM BIRTHDAY)))*0.1 -1)*10||'대' as "연령대",GENDER,COUNT(*)인원수
	FROM (
                SELECT DISTINCT M.MNO,M.BIRTHDAY,M.GENDER
                FROM MEMBER M,MEMBER ST,STREAMER S,SPON_HIS H
                WHERE ST.MNO = S.MNO
                AND S.SNO = H.SNO
                AND M.MNO = H.MNO
                AND ST.MNO = #{mno})
	GROUP BY CEIL(TO_NUMBER(TO_CHAR(SYSDATE,'RRRR') - TO_CHAR(EXTRACT(YEAR FROM BIRTHDAY)))*0.1 -1)*10||'대',GENDER
	ORDER BY "연령대" DESC
	</select>
	
	<!-- 나이별 후원 통계 (소연) -->
	<select id="selectSponAgeData" resultType="java.util.HashMap">
	SELECT CEIL(TO_NUMBER(TO_CHAR(SYSDATE,'RRRR') - TO_CHAR(EXTRACT(YEAR FROM BIRTHDAY)))*0.1 -1)*10||'대' as "연령대",GENDER,COUNT(*)인원수
	FROM (
                SELECT DISTINCT M.MNO,M.BIRTHDAY,M.GENDER
                FROM MEMBER M,MEMBER ST,STREAMER S,subscription_his H
                WHERE ST.MNO = S.MNO
                AND S.SNO = H.SNO
                AND M.MNO = H.MNO
                AND ST.MNO = #{mno})
	GROUP BY CEIL(TO_NUMBER(TO_CHAR(SYSDATE,'RRRR') - TO_CHAR(EXTRACT(YEAR FROM BIRTHDAY)))*0.1 -1)*10||'대',GENDER
	ORDER BY "연령대" DESC
	</select>
	
	<!-- 추천 통계(소연) -->
	<select id="recomList" resultType="java.util.HashMap" parameterType="java.util.HashMap">
	SELECT TO_CHAR(BH_START_DATE,'MM')AS MONTH,SUM(COUNT_RECOMMENDATION) AS SUM
	
	<if test="type==1">
	       ,TO_CHAR(BH_START_DATE,'IW')- TO_CHAR(TO_DATE(TO_CHAR(BH_START_DATE,'MM'),'MM'),'IW')+1 AS WEEK
	</if>	
		FROM MEMBER,BROAD_CENTER,BROAD_HIS
		WHERE MEMBER.MNO = BROAD_CENTER.MNO
		AND BROAD_CENTER.BCNO = BROAD_HIS.BCNO
		AND BROAD_CENTER.BCNO = (SELECT BCNO FROM BROAD_CENTER WHERE MNO = #{mno})
		AND BH_STATUS = 'N'
	
	<if test="type==1">
		AND TO_CHAR(BH_START_DATE,'MM') >= TO_CHAR(SYSDATE,'MM')-3
		GROUP BY TO_CHAR(BH_START_DATE,'MM'),TO_CHAR(BH_START_DATE,'IW')- TO_CHAR(TO_DATE(TO_CHAR(BH_START_DATE,'MM'),'MM'),'IW')+1
	</if>
	<if test="type==2">
		AND TO_CHAR(BH_START_DATE,'MM') >= TO_CHAR(SYSDATE,'MM')-3
		GROUP BY TO_CHAR(BH_START_DATE,'MM')
	</if>
	ORDER BY 1 ASC
	</select>
	
		<!-- 오늘과 어제의 추천 수 비교 -->
	<select id="todayRecom" resultType="java.util.HashMap">
        SELECT NVL(TODAY,0)as TODAY,NVL(YESTERDAY,0) AS YESTERDAY
		FROM
		(SELECT SUM(COUNT_RECOMMENDATION) AS TODAY
        FROM BROAD_HIS
        WHERE to_char(BH_START_DATE,'yyyymmdd') = to_char(SYSDATE,'yyyymmdd')
        AND bcno = (SELECT bcno FROM BROAD_CENTER WHERE MNO =  #{mno})) , 
        (SELECT SUM(COUNT_RECOMMENDATION) AS YESTERDAY
        FROM BROAD_HIS
        WHERE to_char(BH_START_DATE,'yyyymmdd') = to_char(SYSDATE-1,'yyyymmdd')
        AND bcno = (SELECT bcno FROM BROAD_CENTER WHERE MNO =  #{mno}))
		
	</select>
	
	<!-- 오늘과 어제의 추천 수 비교 -->
	<select id="compareYesterDay" resultType="java.util.HashMap">
	SELECT YESTERDAY,TODAY
	FROM(SELECT SUM(COUNT_RECOMMENDATION) AS YESTERDAY
        FROM BROAD_HIS
        WHERE BH_START_DATE = SYSDATE
        AND bcno = #{mno}) , (SELECT SUM(COUNT_RECOMMENDATION) AS TODAY
        FROM BROAD_HIS
        WHERE BH_START_DATE = SYSDATE-1
        AND bcno = #{mno})
	</select>
	
	<!-- 최근 6개월의 스폰,구독 전체 조회  -->
	<select id="selectAllChart" resultType="java.util.HashMap">
		SELECT TO_CHAR(SPON_DATE,'MM')AS SPON_MONTH,COUNT(*) AS SPON_COUNT,TO_CHAR(SPON_DATE,'IW')- TO_CHAR(TO_DATE(TO_CHAR(SPON_DATE,'MM'),'MM'),'IW')+1 AS SPON_WEEK
		FROM MEMBER,STREAMER,SPON_HIS
		WHERE MEMBER.MNO = STREAMER.MNO
		AND STREAMER.SNO = SPON_HIS.SNO
		AND SPON_HIS.SNO = #{mno}
		AND TO_CHAR(SPON_DATE,'YYYY') = TO_CHAR(SYSDATE,'YYYY')
		AND TO_CHAR(SPON_DATE,'MM') >= TO_CHAR(SYSDATE,'MM')-6
		GROUP BY TO_CHAR(SPON_DATE,'MM'),TO_CHAR(SPON_DATE,'IW')- TO_CHAR(TO_DATE(TO_CHAR(SPON_DATE,'MM'),'MM'),'IW')+1
		ORDER BY 1 ASC
	</select>
	
	<select id="selectAllSubChart" resultType="java.util.HashMap">	
		SELECT TO_CHAR(SU_START_DATE,'MM')AS SU_MONTH,COUNT(*) AS SUB_COUNT,TO_CHAR(SU_START_DATE,'IW')- TO_CHAR(TO_DATE(TO_CHAR(SU_START_DATE,'MM'),'MM'),'IW')+1 AS SUB_WEEK
		FROM MEMBER,STREAMER,SUBSCRIPTION_HIS
		WHERE MEMBER.MNO = STREAMER.MNO
		AND STREAMER.SNO = SUBSCRIPTION_HIS.SNO
		AND SUBSCRIPTION_HIS.SNO = #{mno}
		AND TO_CHAR(SU_START_DATE,'YYYY') = TO_CHAR(SYSDATE,'YYYY')
		AND TO_CHAR(SU_START_DATE,'MM') >= TO_CHAR(SYSDATE,'MM')-6
		GROUP BY TO_CHAR(SU_START_DATE,'MM'),TO_CHAR(SU_START_DATE,'IW')- TO_CHAR(TO_DATE(TO_CHAR(SU_START_DATE,'MM'),'MM'),'IW')+1
		ORDER BY 1 ASC
	</select>

	<!-- 장기 구독자 추가(소연) -->
	<insert id="insertSub" parameterType="Streamer">
		INSERT INTO
		SUBSCRIPTION_HIS(SUNO,MNO,SNO,SU_START_DATE,SU_PERIOD_DATE,SU_STATUS)
		VALUES (SEQ_SUNO.NEXTVAL,#{mno},#{sno},sysdate,null,'Y')
	</insert>

	<!-- 개월별 구독자 추가(소연) -->
	<insert id="insertMnthlSbscr" parameterType="java.util.HashMap">
		INSERT INTO
		SUBSCRIPTION_HIS(SUNO,MNO,SNO,SU_START_DATE,SU_PERIOD_DATE,SU_STATUS)
		VALUES (SEQ_SUNO.NEXTVAL,#{streamer.mno},#{streamer.sno},sysdate,
		<if test="amount==19"> add_months(sysdate,3)</if>
		<if test="amount==25"> add_months(sysdate,6)</if>
		<if test="amount==30"> add_months(sysdate,12)</if>
		,
		'Y')
	</insert>


	<!-- 후원 리스트 추가(소연) -->
	<insert id="insertNP" parameterType="java.util.HashMap">
		INSERT INTO SPON_HIS
		VALUES
		(SEQ_SPNO.NEXTVAL,#{amount},SYSDATE,#{streamer.mno},#{streamer.sno})
	</insert>

	<!-- 환전 신청 추가 (소연) -->
	<insert id="insertExchange" parameterType="java.util.HashMap">
		INSERT INTO EXCHANGE
		VALUES (SEQ_ENO.NEXTVAL,#{amount},SYSDATE,#{exc_fee},'N',#{mno},null)
	</insert>

	<!-- 환전 신청 후 포인트 차감(소연) -->
	<update id="updatePoint" parameterType="java.util.HashMap">
		UPDATE MEMBER
		SET POINT = (SELECT POINT FROM MEMBER WHERE MNO = #{mno}) - #{amount}
		WHERE MNO = #{mno}
	</update>
	
	<!-- 스폰 받으면 받은 멤버 포인트 업데이트 -->
	<update id="updateSponPoint" parameterType="java.util.HashMap">
	UPDATE MEMBER
	SET POINT = (SELECT POINT 
				 FROM MEMBER 
				 WHERE MNO = (SELECT MEMBER.MNO 
								FROM MEMBER,STREAMER 
								WHERE MEMBER.MNO = STREAMER.MNO 
								AND SNO = #{streamer.sno})) + #{amount}
	WHERE MNO = (SELECT STREAMER.MNO FROM MEMBER,STREAMER WHERE MEMBER.MNO = STREAMER.MNO AND SNO = #{streamer.sno})
	</update>


	<!-- isStreamer Update(회륜) -->
	<update id="isStreamerUpdate" parameterType="Member">
		UPDATE MEMBER
		SET
		IS_STREAMER='Y'
		WHERE MNO=#{mno}
	</update>

	<!-- insert Streamer(회륜) -->
	<insert id="insertStreamer" parameterType="Member">
		INSERT INTO
		STREAMER(SNO,MNO,BSTART_DATE,CUMULATIVE_SELECTION,IS_AUTH)
		VALUES(SEQ_SNO.NEXTVAL,#{mno},SYSDATE,DEFAULT,DEFAULT)
	</insert>
	
	<!-- 블랙리스트 추가(소연) -->
	<insert id="insertBlackList" parameterType="java.util.HashMap">
		INSERT INTO BLACKLIST VALUES(SEQ_BLNO.NEXTVAL,#{mno},SYSDATE,'Y',(SELECT MNO FROM MEMBER WHERE MID=#{userId}))
	</insert>

	<!-- 환전 신청 취소 (소연) -->
	<delete id="cancelExc" parameterType="java.util.HashMap">
		DELETE
		FROM EXCHANGE
		WHERE MNO = #{mno}
		AND EXCNO = #{excno}
		AND EXC_STATUS = 'N'
	</delete>


	<!-- 방송국 메인 조회(정연) -->
	<select id="selectMainInfo" parameterType="_int" resultType="java.util.HashMap">
		SELECT FSNO, SHSNO, BCINTRO
		FROM (SELECT COUNT(SNO) FSNO
		FROM FAVORITES
		WHERE SNO = #{mno}),
		(SELECT COUNT(SNO) SHSNO
		FROM SUBSCRIPTION_HIS
		WHERE SNO = #{mno}),
        (SELECT BCINTRO
         FROM BROAD_CENTER
         WHERE MNO = #{mno})
	</select>
	
	<!-- 모든 블랙리스트 유저들 업데이트 (소연) -->
	<update id="deleteAllBlackList" parameterType="_int">
		UPDATE BLACKLIST SET BL_STATUS = 'N' WHERE SNO = #{mno}
	</update>
	
	<!-- 블랙리스트 search (소연) -->
	<select id="searchBlackList" resultType="java.util.HashMap" parameterType="java.util.HashMap">
	SELECT BLNO,M.NICK_NAME,M.MID,B.BLNO,TO_CHAR(BL_DATE,'YYYY/MM/DD') AS BL_DATE
	FROM MEMBER ST,MEMBER M,BLACKLIST B
	WHERE ST.MNO = B.SNO
	AND M.MNO = B.MNO
	AND ST.MNO = #{mno}
	AND (M.MID LIKE '%'||upper(#{searchValue})||'%' 
		OR M.MID LIKE '%'||lower(#{searchValue})||'%'
	    OR M.NICK_NAME LIKE '%'||upper(#{searchValue})||'%' 
	    OR M.NICK_NAME LIKE '%'||upper(#{searchValue})||'%')
	AND BL_STATUS = 'Y'
	</select>	
	
	<!-- 다중 블랙리스트 처리(소연) -->
	<update id="mutipleDeleteBlack" parameterType="java.util.HashMap">
		UPDATE BLACKLIST SET BL_STATUS = 'N' WHERE SNO = #{mno} AND BLNO = #{blno}
	</update>
	
	<!-- 스트리머 정산 내역 count 조회 (소연)-->
	<select id="getCulCount" parameterType="_int" resultType="_int">
		SELECT COUNT(*) AS CLC_COUNT
		FROM (SELECT C.CLCNO,M.NICK_NAME,TO_CHAR(R.C_SDATE,'YYYY/MM/DD') AS SDATE,TO_CHAR(R.C_EDATE,'YYYY/MM/DD') AS EDATE
		            ,TO_CHAR(CLC_DATE,'YYYY/MM/DD') AS CLC_DATE,CLC_AMOUNT,CLC_STATUS,DEC_STATUS,DEC_DATE
		FROM MEMBER M,MEMBER ST,STREAMER S,PARTNER P,CONTRACT R,CALCULATE C,DECLINE D
		WHERE M.MNO = P.MNO
		AND ST.MNO = S.MNO
		AND S.SNO = P.SNO    
		AND R.CNO = P.CNO
		AND C.PNO = P.PNO
		AND D.CLCNO(+) = C.CLCNO
		AND ST.MNO = #{mno}
		order by dec_status desc)
		order by clc_status
	</select>
	
	<!-- 내가 정산해준  내역 조회(소연) -->
	<select id="clcList" parameterType="_int" resultType="java.util.HashMap">
		SELECT CALVIEW.*,( CASE WHEN DEC_DATE IS NOT NULL AND DEC_STATUS='Y' THEN '재신청 완료' END) AS REAPPLY
		FROM (SELECT C.CLCNO,M.NICK_NAME,TO_CHAR(R.C_SDATE,'YYYY/MM/DD') AS SDATE,TO_CHAR(R.C_EDATE,'YYYY/MM/DD') AS EDATE
		            ,TO_CHAR(CLC_DATE,'YYYY/MM/DD') AS CLC_DATE,CLC_AMOUNT,CLC_STATUS,DEC_STATUS,DEC_DATE
		FROM MEMBER M,MEMBER ST,STREAMER S,PARTNER P,CONTRACT R,CALCULATE C,DECLINE D
		WHERE M.MNO = P.MNO
		AND ST.MNO = S.MNO
		AND S.SNO = P.SNO    
		AND R.CNO = P.CNO
		AND C.PNO = P.PNO
		AND D.CLCNO(+) = C.CLCNO
		AND ST.MNO = #{mno}
		order by dec_status desc) CALVIEW
		order by clc_status desc,dec_status asc
	</select>
	
	<!-- 거절 이력 조회(소연) -->
	<select id="selecOneClc" resultType="java.util.HashMap" parameterType="java.util.HashMap">	
		SELECT ST.MID,ST.NICK_NAME,TO_CHAR(R.C_SDATE,'YYYY/MM/DD')AS SDATE,TO_CHAR(R.C_EDATE,'YYYY/MM/DD') AS EDATE,
			   TO_CHAR(C.CLC_DATE,'YYYY/MM/DD') AS CLC_DATE,C.CLC_STATUS,C.CLCNO,
			   D.DECNO,D.DEC_STATUS,TO_CHAR(D.DEC_DATE,'YY/MM/DD')AS DEC_DATE,PERPRICE,PTYPE,
			   TO_CHAR(CLC_AMOUNT,'999,999,999')AS CLC_AMOUNT,DEC_REASON,DECNO
		FROM MEMBER M,MEMBER ST, STREAMER S,PARTNER P,CONTRACT R,CALCULATE C,DECLINE D
		WHERE M.MNO = P.MNO
		AND ST.MNO = S.MNO
		AND S.SNO = P.SNO
		AND R.CNO = P.CNO
		AND C.PNO = P.PNO
		AND C.CLCNO = D.CLCNO(+)
		AND M.MNO = #{mno}
		AND C.CLCNO = #{clcno}
	</select>
	
	<!-- 요청받은 정산 내역 조회(소연) -->
	<select id="detailClc" resultType="java.util.HashMap" parameterType="java.util.HashMap">
		SELECT M.MID,M.NICK_NAME,C.CLCNO,P.PTYPE,
				C.CLC_AMOUNT,J.PERPRICE,
				TO_CHAR(R.C_SDATE,'YYYY/MM/DD')AS SDATE,TO_CHAR(C.CLC_DATE,'YYYY/MM/DD') AS CLC_DATE
		FROM MEMBER M,MEMBER ST,STREAMER S,PARTNER P,CALCULATE C,JOB_BOARD J,CONTRACT R,BOARD B
		WHERE M.MNO = P.MNO
		AND ST.MNO = S.MNO
		AND S.SNO = P.SNO
		AND P.PNO = C.PNO
		AND J.BNO = B.BNO
		AND R.CNO = P.CNO
		AND J.JBNO = R.JBNO
		AND ST.MNO = #{mno}
		AND C.CLCNO = #{clcno}
	</select>
	
	   <!-- mno로 스트리머 정보 조회.....병욱.... -->
   <select id="selectStreamerMno" parameterType="_int" resultMap="streamerResultSet2">  
      SELECT * 
      FROM 
      STREAMER WHERE MNO = #{mno}      
   </select>
	


	<!-- 정산 작업중 (status update) 소연 -->
	<update id="reClc" parameterType="java.util.HashMap">
		update decline 
		set DEC_STATUS = 'Y' 
		where clcno = (select C.clcno 
						from CALCULATE C,decline D 
						where c.clcno = d.clcno and decno = #{decno}  
						and C.SNO = (select sno 
									 from calculate c,decline d 
									 where c.clcno = d.clcno 
									 and decno=#{decno})) 
	</update>
	
	<!-- 정산 재신청 (소연) -->
	<insert id="reInsertClc" parameterType="java.util.HashMap">
		insert into calculate values (SEQ_CLCNO.NEXTVAL,#{mno},#{PNO},sysdate,#{CLC_AMOUNT},'N',sysdate)
	</insert>
	
	
	<!-- insert용 데이터 조회(소연) -->
	<select id="getInsertData" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT S.SNO,P.PNO,CLC_AMOUNT
		FROM MEMBER M, MEMBER ST,STREAMER S,PARTNER P,DECLINE D,CALCULATE C
		WHERE M.MNO = P.MNO
		AND ST.MNO = S.MNO
		AND S.SNO = P.SNO
		AND C.PNO = P.PNO
		AND C.CLCNO = D.CLCNO(+)		
		AND D.DECNO = #{decno}
		AND M.MNO = #{mno}
			
	</select>
	
	<!-- 요청한 정산 내역 카운트 조회 -->
	<select  id="getReqClcCount" resultType="_int">
		SELECT COUNT(*)
		FROM(SELECT C.*
		    FROM MEMBER M,MEMBER ST, STREAMER S,PARTNER P,CONTRACT R,CALCULATE C,DECLINE D
		    WHERE M.MNO = P.MNO
		    AND ST.MNO = S.MNO
		    AND S.SNO = P.SNO
		    AND R.CNO = P.CNO
		    AND C.PNO = P.PNO
		    AND C.CLCNO = D.CLCNO(+)
		    AND M.MNO = #{mno})
		ORDER BY 1 ASC
	</select>
	
	<!-- 내가 요청한 정산 내역 조회 -->
	<select id="selectReqClcList" resultType="java.util.HashMap">
	SELECT CLCVIEW.*,( CASE WHEN DEC_DATE IS NOT NULL AND DEC_STATUS='Y' THEN '재신청 완료'
	                        WHEN CLC_STATUS = 'Y' THEN '정산 완료' 
	                        WHEN DEC_DATE IS NOT NULL AND DEC_STATUS='N' THEN '정산 거절' 
	                        WHEN DEC_DATE IS NULL AND CLC_STATUS='N' THEN '정산 접수' END) AS REAPPLY               
	FROM(SELECT ST.MID,ST.NICK_NAME,TO_CHAR(R.C_SDATE,'YYYY/MM/DD')AS SDATE,TO_CHAR(R.C_EDATE,'YYYY/MM/DD') AS EDATE,
				TO_CHAR(C.CLC_DATE,'YYYY/MM/DD') AS CLC_DATE,C.CLC_STATUS,
				C.CLCNO,D.DECNO,D.DEC_STATUS,TO_CHAR(D.DEC_DATE,'YY/MM/DD')AS DEC_DATE,
				TO_CHAR(clc_req_date,'YYYY/MM/DD')AS CLC_REQ_DATE,TO_CHAR(CLC_AMOUNT,'999,999,999')AS CLC_AMOUNT
		FROM MEMBER M,MEMBER ST, STREAMER S,PARTNER P,CONTRACT R,CALCULATE C,DECLINE D
		WHERE M.MNO = P.MNO
		AND ST.MNO = S.MNO
		AND S.SNO = P.SNO
		AND R.CNO = P.CNO
		AND C.PNO = P.PNO
		AND C.CLCNO = D.CLCNO(+)
		AND M.MNO = #{mno}) CLCVIEW
		order by clc_status asc,dec_status asc,clc_req_date asc
	</select>
	
	<!-- 정산 거절 이력 추가(소연) -->
	<insert id="rejectClc" parameterType="java.util.HashMap">
		INSERT INTO DECLINE VALUES (SEQ_DECNO.NEXTVAL,#{reason},#{clcno},SYSDATE,'N')	
	</insert>
	
	<!-- 좆같은 정산처리 중 ♡♡ -->
	<update id="confirmClc"  parameterType="java.util.HashMap">
	UPDATE CALCULATE SET CLC_STATUS='Y' WHERE CLCNO = #{clcno}
	</update>
	
	<!-- 좆같은 정산처리 중 ♡♡ -->
	<update id="updateClcPoint" parameterType="java.util.HashMap">
	UPDATE MEMBER
	SET POINT = (SELECT M.POINT
	            FROM MEMBER M,MEMBER ST,STREAMER S,PARTNER P,CALCULATE C
	            WHERE M.MNO = P.MNO
	            AND ST.MNO = S.MNO
	            AND S.SNO = P.SNO
	            AND C.PNO = P.PNO
	            AND C.CLCNO = #{clcno}) + #{clc_amount}
	WHERE MNO = (SELECT M.MNO
	             FROM MEMBER M,MEMBER ST,STREAMER S,PARTNER P,CALCULATE C
	             WHERE M.MNO = P.MNO
	             AND ST.MNO = S.MNO
	             AND S.SNO = P.SNO
	             AND C.PNO = P.PNO
	             AND C.CLCNO = #{clcno})
	</update>
	
</mapper>